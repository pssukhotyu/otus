@startuml

!theme carbon-gray
top to bottom direction
skinparam linetype ortho

class _hyper_2_1_chunk {
   time: timestamp
   host: text
   topic: text
   value: double precision
}
class bgw_job {
   application_name: name
   schedule_interval: interval
   max_runtime: interval
   max_retries: integer
   retry_period: interval
   proc_schema: name
   proc_name: name
   owner: regrole
   scheduled: boolean
   fixed_schedule: boolean
   initial_start: timestamp with time zone
   hypertable_id: integer
   config: jsonb
   check_schema: name
   check_name: name
   timezone: text
   id: integer
}
class bgw_job_stat {
   last_start: timestamp with time zone
   last_finish: timestamp with time zone
   next_start: timestamp with time zone
   last_successful_finish: timestamp with time zone
   last_run_success: boolean
   total_runs: bigint
   total_duration: interval
   total_duration_failures: interval
   total_successes: bigint
   total_failures: bigint
   total_crashes: bigint
   consecutive_failures: integer
   consecutive_crashes: integer
   flags: integer
   job_id: integer
}
class bgw_policy_chunk_stats {
   job_id: integer
   chunk_id: integer
   num_times_job_run: integer
   last_time_job_run: timestamp with time zone
}
class cache_inval_bgw_job
class cache_inval_extension
class cache_inval_hypertable
class chunk {
   hypertable_id: integer
   schema_name: name
   table_name: name
   compressed_chunk_id: integer
   dropped: boolean
   status: integer
   osm_chunk: boolean
   id: integer
}
class chunk_constraint {
   chunk_id: integer
   dimension_slice_id: integer
   constraint_name: name
   hypertable_constraint_name: name
}
class chunk_copy_operation {
   backend_pid: integer
   completed_stage: name
   time_start: timestamp with time zone
   chunk_id: integer
   compress_chunk_name: name
   source_node_name: name
   dest_node_name: name
   delete_on_source_node: boolean
   operation_id: name
}
class chunk_data_node {
   chunk_id: integer
   node_chunk_id: integer
   node_name: name
}
class chunk_index {
   chunk_id: integer
   index_name: name
   hypertable_id: integer
   hypertable_index_name: name
}
class chunk_replication_status {
   hypertable_schema: name
   hypertable_name: name
   chunk_schema: name
   chunk_name: name
   desired_num_replicas: smallint
   num_replicas: bigint
   replica_nodes: name[]
   non_replica_nodes: name[]
}
class chunks {
   hypertable_schema: name
   hypertable_name: name
   chunk_schema: name
   chunk_name: name
   primary_dimension: name
   primary_dimension_type: regtype
   range_start: timestamp with time zone
   range_end: timestamp with time zone
   range_start_integer: bigint
   range_end_integer: bigint
   is_compressed: boolean
   chunk_tablespace: name
   data_nodes: name[]
}
class compressed_chunk_stats {
   hypertable_schema: name
   hypertable_name: name
   chunk_schema: name
   chunk_name: name
   compression_status: text
   uncompressed_heap_size: bigint
   uncompressed_index_size: bigint
   uncompressed_toast_size: bigint
   uncompressed_total_size: bigint
   compressed_heap_size: bigint
   compressed_index_size: bigint
   compressed_toast_size: bigint
   compressed_total_size: bigint
}
class compression_algorithm {
   version: smallint
   name: name
   description: text
   id: smallint
}
class compression_chunk_size {
   compressed_chunk_id: integer
   uncompressed_heap_size: bigint
   uncompressed_toast_size: bigint
   uncompressed_index_size: bigint
   compressed_heap_size: bigint
   compressed_toast_size: bigint
   compressed_index_size: bigint
   numrows_pre_compression: bigint
   numrows_post_compression: bigint
   chunk_id: integer
}
class compression_settings {
   hypertable_schema: name
   hypertable_name: name
   attname: name
   segmentby_column_index: smallint
   orderby_column_index: smallint
   orderby_asc: boolean
   orderby_nullsfirst: boolean
}
class continuous_agg {
   raw_hypertable_id: integer
   parent_mat_hypertable_id: integer
   user_view_schema: name
   user_view_name: name
   partial_view_schema: name
   partial_view_name: name
   bucket_width: bigint
   direct_view_schema: name
   direct_view_name: name
   materialized_only: boolean
   finalized: boolean
   mat_hypertable_id: integer
}
class continuous_agg_migrate_plan {
   start_ts: timestamp with time zone
   end_ts: timestamp with time zone
   user_view_definition: text
   mat_hypertable_id: integer
}
class continuous_agg_migrate_plan_step {
   status: text
   start_ts: timestamp with time zone
   end_ts: timestamp with time zone
   type: text
   config: jsonb
   mat_hypertable_id: integer
   step_id: integer
}
class continuous_aggregates {
   hypertable_schema: name
   hypertable_name: name
   view_schema: name
   view_name: name
   view_owner: name
   materialized_only: boolean
   compression_enabled: boolean
   materialization_hypertable_schema: name
   materialization_hypertable_name: name
   view_definition: text
   finalized: boolean
}
class continuous_aggs_bucket_function {
   experimental: boolean
   name: text
   bucket_width: text
   origin: text
   timezone: text
   mat_hypertable_id: integer
}
class continuous_aggs_hypertable_invalidation_log {
   hypertable_id: integer
   lowest_modified_value: bigint
   greatest_modified_value: bigint
}
class continuous_aggs_invalidation_threshold {
   watermark: bigint
   hypertable_id: integer
}
class continuous_aggs_materialization_invalidation_log {
   materialization_id: integer
   lowest_modified_value: bigint
   greatest_modified_value: bigint
}
class continuous_aggs_watermark {
   watermark: bigint
   mat_hypertable_id: integer
}
class data_nodes {
   node_name: name
   owner: name
   options: text[]
}
class dimension {
   hypertable_id: integer
   column_name: name
   column_type: regtype
   aligned: boolean
   num_slices: smallint
   partitioning_func_schema: name
   partitioning_func: name
   interval_length: bigint
   compress_interval_length: bigint
   integer_now_func_schema: name
   integer_now_func: name
   id: integer
}
class dimension_partition {
   dimension_id: integer
   range_start: bigint
   data_nodes: name[]
}
class dimension_slice {
   dimension_id: integer
   range_start: bigint
   range_end: bigint
   id: integer
}
class dimensions {
   hypertable_schema: name
   hypertable_name: name
   dimension_number: bigint
   column_name: name
   column_type: regtype
   dimension_type: text
   time_interval: interval
   integer_interval: bigint
   integer_now_func: name
   num_partitions: smallint
}
class hypertable {
   schema_name: name
   table_name: name
   associated_schema_name: name
   associated_table_prefix: name
   num_dimensions: smallint
   chunk_sizing_func_schema: name
   chunk_sizing_func_name: name
   chunk_target_size: bigint
   compression_state: smallint
   compressed_hypertable_id: integer
   replication_factor: smallint
   status: integer
   id: integer
}
class hypertable_chunk_local_size {
   hypertable_schema: name
   hypertable_name: name
   hypertable_id: integer
   chunk_id: integer
   chunk_schema: name
   chunk_name: name
   total_bytes: bigint
   heap_bytes: bigint
   index_bytes: bigint
   toast_bytes: bigint
   compressed_total_size: bigint
   compressed_heap_size: bigint
   compressed_index_size: bigint
   compressed_toast_size: bigint
}
class hypertable_compression {
   compression_algorithm_id: smallint
   segmentby_column_index: smallint
   orderby_column_index: smallint
   orderby_asc: boolean
   orderby_nullsfirst: boolean
   hypertable_id: integer
   attname: name
}
class hypertable_data_node {
   hypertable_id: integer
   node_hypertable_id: integer
   node_name: name
   block_chunks: boolean
}
class hypertables {
   hypertable_schema: name
   hypertable_name: name
   owner: name
   num_dimensions: smallint
   num_chunks: bigint
   compression_enabled: boolean
   is_distributed: boolean
   replication_factor: smallint
   data_nodes: name[]
   tablespaces: name[]
}
class job_errors {
   job_id: integer
   proc_schema: text
   proc_name: text
   pid: integer
   start_time: timestamp with time zone
   finish_time: timestamp with time zone
   sqlerrcode: text
   err_message: text
}
class job_errors {
   job_id: integer
   pid: integer
   start_time: timestamp with time zone
   finish_time: timestamp with time zone
   error_data: jsonb
}
class job_stats {
   hypertable_schema: name
   hypertable_name: name
   job_id: integer
   last_run_started_at: timestamp with time zone
   last_successful_finish: timestamp with time zone
   last_run_status: text
   job_status: text
   last_run_duration: interval
   next_start: timestamp with time zone
   total_runs: bigint
   total_successes: bigint
   total_failures: bigint
}
class jobs {
   job_id: integer
   application_name: name
   schedule_interval: interval
   max_runtime: interval
   max_retries: integer
   retry_period: interval
   proc_schema: name
   proc_name: name
   owner: regrole
   scheduled: boolean
   fixed_schedule: boolean
   config: jsonb
   next_start: timestamp with time zone
   initial_start: timestamp with time zone
   hypertable_schema: name
   hypertable_name: name
   check_schema: name
   check_name: name
}
class metadata {
   value: text
   include_in_telemetry: boolean
   key: name
}
class sensors {
   time: timestamp
   host  /* tag */: text
   topic  /* tag */: text
   value: double precision
}
class policies {
   relation_name: name
   relation_schema: name
   schedule_interval: interval
   proc_schema: name
   proc_name: name
   config: jsonb
   hypertable_schema: name
   hypertable_name: name
}
class remote_txn {
   data_node_name: name
   remote_transaction_id: text
}
class tablespace {
   hypertable_id: integer
   tablespace_name: name
   id: integer
}
class telemetry_event {
   created: timestamp with time zone
   tag: name
   body: jsonb
}

bgw_job                                           -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
bgw_job_stat                                      -[#595959,plain]-^  bgw_job                                          : "job_id:id"
bgw_policy_chunk_stats                            -[#595959,plain]-^  bgw_job                                          : "job_id:id"
bgw_policy_chunk_stats                            -[#595959,plain]-^  chunk                                            : "chunk_id:id"
chunk                                             -[#595959,plain]-^  chunk                                            : "compressed_chunk_id:id"
chunk                                             -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
chunk_constraint                                  -[#595959,plain]-^  chunk                                            : "chunk_id:id"
chunk_constraint                                  -[#595959,plain]-^  dimension_slice                                  : "dimension_slice_id:id"
chunk_copy_operation                              -[#595959,plain]-^  chunk                                            : "chunk_id:id"
chunk_data_node                                   -[#595959,plain]-^  chunk                                            : "chunk_id:id"
chunk_index                                       -[#595959,plain]-^  chunk                                            : "chunk_id:id"
chunk_index                                       -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
compression_chunk_size                            -[#595959,plain]-^  chunk                                            : "chunk_id:id"
compression_chunk_size                            -[#595959,plain]-^  chunk                                            : "compressed_chunk_id:id"
continuous_agg                                    -[#595959,plain]-^  continuous_agg                                   : "parent_mat_hypertable_id:mat_hypertable_id"
continuous_agg                                    -[#595959,plain]-^  hypertable                                       : "mat_hypertable_id:id"
continuous_agg                                    -[#595959,plain]-^  hypertable                                       : "raw_hypertable_id:id"
continuous_agg_migrate_plan_step                  -[#595959,plain]-^  continuous_agg_migrate_plan                      : "mat_hypertable_id"
continuous_aggs_bucket_function                   -[#595959,plain]-^  hypertable                                       : "mat_hypertable_id:id"
continuous_aggs_hypertable_invalidation_log       -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
continuous_aggs_invalidation_threshold            -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
continuous_aggs_materialization_invalidation_log  -[#595959,plain]-^  continuous_agg                                   : "materialization_id:mat_hypertable_id"
continuous_aggs_watermark                         -[#595959,plain]-^  continuous_agg                                   : "mat_hypertable_id"
dimension                                         -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
dimension_partition                               -[#595959,plain]-^  dimension                                        : "dimension_id:id"
dimension_slice                                   -[#595959,plain]-^  dimension                                        : "dimension_id:id"
hypertable                                        -[#595959,plain]-^  hypertable                                       : "compressed_hypertable_id:id"
hypertable_compression                            -[#595959,plain]-^  compression_algorithm                            : "compression_algorithm_id:id"
hypertable_compression                            -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
hypertable_data_node                              -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
tablespace                                        -[#595959,plain]-^  hypertable                                       : "hypertable_id:id"
@enduml
